../tools/liblinuxlivees.conf # workaround to avoid error messages

echolog "creating init script in /tmp/init..."

echo >/mnt/$LINUXINIT
chmod 0755 /mnt/$LINUXINIT

NEWROOTPASS="`cmdline_value passwd`"
if [ "$NEWROOTPASS" = "ask" ]; then
   echolog -ne "\nEnter new password for root: "
   read -s NEWROOTPASS
fi

if [ ! "$NEWROOTPASS" = "" ]; then
   echolog "root:$NEWROOTPASS" | chroot /mnt /usr/sbin/chpasswd
fi

echo '
echo "freeing ramdisk..."
umount -nl /mnt/ramdisk
/sbin/blockdev --flushbufs /dev/rd/0
echo "'"`header \"starting init\"`"'"
exec /sbin/init <dev/console >dev/console 2>&1
' >>/mnt/$LINUXINIT

cp /var/log/livedbg /mnt/var/log/livedbg
mount -o remount,ro /mnt
cd /mnt

$DEBUG

echolog "changing root directory..."
/sbin/pivot_root . mnt/ramdisk
exec /usr/bin/chroot . $LINUXINIT <dev/console >dev/console 2>&1

header "ERROR!"
echolog "You are not supposed to be here, something went wrong!"
echolog "calling /mnt/usr/bin/chroot failed?"
echolog "Press Ctrl+Alt+Del for reboot."
while [ 1 = 1 ]; do bash; done
dules" 2>/dev/null | while read IMG; do
   echolog "`cp2ram \"$LIVECD_PATH/modules/$IMG\" \"$CP2RAM\"`" >>$MNTORDER
done

# optional modules (insert only modules specified by load= kernel boot parameter)
cmdline_value load | tr "," "\\n" | while read IMG; do
   ls -aA1b "$LIVECD_PATH/optional/$IMG"* 2>/dev/null | while read IMAGE; do
         echolog "`cp2ram \"$IMAGE\" \"$CP2RAM\"`" >>$MNTORDER
   done
done
echolog

echolog -n "unpacking .tar.gz from the CD... "
ls -aA1b $LIVECD_PATH/packs | while read PACK;
do
   echolog -n "$PACK "
   tar -C /mnt -xzmf "$LIVECD_PATH/packs/$PACK"
done
echolog

echolog -n "mounting all images... "
cat $MNTORDER | while read IMG;
do
   echolog -n "`basename \" $IMG\"` "
   mount_img $IMG $IMGRO $INSORDER -n
done
echolog

$DEBUG

header "creating live filesystem"

echolog "Starting ovlfs support (by Arthur Naseef)"
modprobe_module ovl
mount -t ovl cdrom_ovl $IMGRW -o root=$IMGRO,storage=$CHANGES,stg_file=$STGFILE

if [ ! "$?" = "0" ]; then
  header "ERROR!"
  echolog "cannot overmount cdrom in pseudo-write mode."
  echolog "Maybe your kernel doesn't support ovlfs?"
  echolog "Press Ctrl+Alt+Del for reboot."
  while [ 1 = 1 ]; do bash; done
fi

echolog -n "inserting images into filesystem... "
cat $INSORDER | while read IMG;
do
   IMG=$IMGRW/${IMG:${#IMGRO}}
   echolog -n "`basename \"$IMG\"` "
   if [ -x $IMG/preinsert ]; then $IMG/preinsert; fi
   make_links $IMG/data /mnt /mnt
   if [ -x $IMG/postinsert ]; then $IMG/postinsert; fi
done
echolog

$DEBUG

if [ ! "`cmdline_parameter eject`" = "" ]; then
   echolog "trying to eject LiveCD medium..."
   eject "$LIVECD_MOUNT" >/dev/null 2>/dev/null
   if [ ! "$?" = 0 ]; then
      echolog "error, cdrom cannot be unmounted or doesn't support ejecting"
   fi
else
   mount --rbind $LIVECD_PATH /mnt/boot
fi

if [ -d $PROFILED ]; then
   echolog "exporting LIVECD variables to profile.d..."
   echolog "export LIVECD_MOUNT="${LIVECD_MOUNT:4} >$PROFILED/slax.sh
   echolog "export LIVECD_PATH="${LIVECD_PATH:4} >>$PROFILED/slax.sh
   chmod 755 /mnt/etc/profile.d/slax.sh
   echolog "setenv LIVECD_MOUNT "${LIVECD_MOUNT:4} >$PROFILED/slax.csh
   echolog "setenv LIVECD_PATH "${LIVECD_PATH:4} >>$PROFILED/slax.csh
   chmod 755 /mnt/etc/profile.d/slax.csh
fi

echolog "creating fstab..."

echo "tmpfs /     tmpfs defaults 0 0" >/mnt/etc/fstab
echo "proc  /proc proc  defaults 0 0" >>/mnt/etc/fstab

cat $MOUNTS | while read DEVICE; do
   LINE="`cat /proc/mounts | egrep \"^$DEVICE[[:space:]]\"`"
   if [ "$LINE" = "" ]; then continue; fi

   umount "$DEVICE" 1>/dev/null 2>/dev/null
   iN­‰·"$?" = 0Ö›‰·then
      Lˆ