#!/bin/ash

# initrd:
# /
#   bin
#   dev
#   etc
#   mnt
#   union
#        / mnt
#             / live
#                   / changes
#   usr
#   tmp

export PATH=.:/:/usr/sbin:/usr/bin:/sbin:/bin
. liblinuxlive

header "linuxrc-start"
echolog "logging all messages to /var/log/livedbg"

echolog "mounting /proc and /sys filesystems"
mount -t proc proc /proc
mount -t sysfs sysfs /sys

# setup DEBUGCMD variable
if [ "`cmdline_parameter debug`" ]; then DEBUGCMD="debug"; else DEBUGCMD=""; fi

$DEBUGCMD

UNION=/union
CHANGES=/changes
MOUNT=$UNION/mnt
IMAGES=$MOUNT/live/images
TORAM=$MOUNT/live/toram
INITRAMDISK=mnt/live/initramdisk

# we need cdrom support, isofs support, etc
modprobe_essential_modules
setup_dma

$DEBUGCMD

# $UNION will be used as a root directory, livecd modules will be added soon
echolog "setup union on $UNION"
mkdir -p $UNION
mkdir -p $CHANGES
mount -t tmpfs -o "size=90%" tmpfs $CHANGES
mount -t unionfs -o dirs=$CHANGES unionfs $UNION

$DEBUGCMD

# try to find livecd data directory. If not found, try modprobing
# USB or SCSI kernel modules and repead the find procedure again
echolog "looking for data modules"
if [ "$DATA" = "" ]; DATA="`find_live_data_dir $MOUNT`"; fi
if [ "$DATA" = "" ]; then modprobe_usb_modules;  DATA="`find_live_data_dir $MOUNT`"; fi
if [ "$DATA" = "" ]; then modprobe_scsi_modules; DATA="`find_live_data_dir $MOUNT`"; fi
if [ "$DATA" = "" ]; then fatal "Data for LiveCD not found"; fi
echolog "found in $DATA"

$DEBUGCMD

#
# Now we know where our DATA are. We can copy them to RAM.
# We will copy ALL from "base" and "modules" directory, and then
# .mo files selected by load=... boot option
# Finaly modify DATA variable so it will point to directory with copied .mo files
# 

#TODO

#
# Now we know the path to all .mo images which needs to be mounted and inserted
# to live filesystem. Do it for "base", "modules" and "optional" in $DATA
#

echolog "inserting all modules and creating live filesystem"
union_insert_modules $UNION $DATA $IMAGES
activate_fstab $UNION

echolog "changing root directory..."
cd $UNION
mkdir -p $INITRAMDISK
mkdir -p $UNION/dev
if [ ! -e $UNION/dev/console ]; then mknod $UNION/dev/console c 5 1; fi

$DEBUGCMD

/bin/busybox pivot_root . $INITRAMDISK
exec /usr/bin/chroot . sbin/init <dev/console >dev/console 2>&1

header "ERROR!"
echolog "You are not supposed to be here, something went wrong!"
echolog "calling $UNION/usr/bin/chroot failed?"
echolog "Press Ctrl+Alt+Del for reboot."
while [ 1 = 1 ]; do ash; done
