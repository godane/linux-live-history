installive Scripts TODO list
============================

- bootinst.sh/.bat, bootlilo - make the 'Slax' string customizable, and modify
  it the same way like liblinuxlive

- copy2ram together with changes=slax .. can confuse people and/or make
  troubles if user unplugs the flash key after copy2ram. Perhaps
  ignore 'changes=...' if copy2ram is used?

- when busybox is called to list its applets, it should link to correct libraries
  (from linux live scripts, not from current distro).
  ational.txt
   cat ./DOC/bootparams.txt
   vi ./.config

 Author:

   Tomas M. <http://www.linux-live.org>

 Sources:

 Source code of all binaries available in linux-live scripts are not included,
 because of the size. Nevertheless you may download all sources needed to build
 these binaries from ftp.slax.org/source and ftp.slackware.com
=.*/LIVECDNAME="'$LIVECDNAME'"/' > $ROOT/usr/lib/liblinuxlive
else
   ls -1 ./tools | egrep -v "^lib" | while read FILE; do rm -v $ROOT/usr/bin/$FILE; done
   ls -1 ./tools | egrep "^lib" | while read FILE; do rm -v $ROOT/usr/lib/$FILE; done
fi

echo "Linux Live scripts were $N""ed successfuly in $1/"
on can be found in $DEBUG"

mkdir -p $CDDATA/$LIVECDNAME/{base,modules,optional,rootcopy,tools}

echo "copying cd-root to $CDDATA, using kernel from $VMLINUZ"
cp -R cd-root/boot $CDDATA
for i in isolinux syslinux; do
   cat cd-root/boot/$i/$i.cfg | sed -r "s/LABEL linux/LABEL $LIVECDNAME/" | sed -r "s/Run linux/Run $LIVECDNAME/" > $CDDATA/boot/$i/$i.cfg
done
mv $CDDATA/boot/dos/linux.bat $CDDATA/boot/dos/${LIVECDNAME:0:8}.bat
cat cd-root/boot/dos/readme.txt | sed -r "s/LINUX.BAT/"${LIVECDNAME:0:8}.bat"/" > $CDDATA/boot/dos/readme.txt

mkdir -p $CDDATA/$LIVECDNAME
cp -R cd-root/linux/* $CDDATA/$LIVECDNAME
cp tools/* $CDDATA/$LIVECDNAME/tools
cp -R DOC/LICENSE $CDDATA/$LIVECDNAME
cp $VMLINUZ $CDDATA/boot/vmlinuz

echo "creating initrd image..."
echo "Using kernel modules from $ROOT/$LMK"
cd initrd
./initrd_create $LIVECDNAME
if [ "$?" -ne 0 ]; then exit; fi
cd ..

cp initrd/initrd.gz $CDDATA/boot/initrd.gz
rm initrd/initrd.gz

echo "creating compressed images..."

for dir in $MKMOD; do
    if [ -d $ROOT/$dir ]; then
      echo "base/$dir.lzm ..."
      echo -ne > exclude.txt
      for i in $EXCLUDE; do
         part=$(echo "x/$i" | tr -s / | sed -r "s:x/[^/]+/::")
         if [ -e "$ROOT/$dir/$part" ]; then echo "$ROOT/$dir/$part" >> exclude.txt; fi
      done
      cat exclude.txt
      create_module $ROOT/$dir $CDDATA/$LIVECDNAME/base/$dir.lzm -keep-as-directory -ef exclude.txt
      if [ $? -ne 0 ]; then exit; fi
      rm exclude.txt
      echo
    fi
done

cd $CDDATA/$LIVECDNAME
echo "--------done----------"
echo
echo "* run $CDDATA/$LIVECDNAME/make_iso.bat to create ISO image"
echo "* or copy content of $CDDATA to your USB device"
echo "and run ./boot/bootinst.sh (from the device!) to setup boot sector"
echo
echo "Now press Enter..."
read junk
ux-live-debug.log
