Linux Live scripts Requirements         by Tomas M.   http://www.linux-live.org

  To be able to create a Linux Live CD, your kernel must meet all the
  following requirements:

   * Your distro must be running kernel 2.6.9 or higher
     and udev must be installed and working (because devices from /dev are not
     copied to LiveCD)

   * all the following things must be compiled directly into kernel:
     (these options are usually compiled so you shouldn't have problems)
     - ext2 (CONGIG_EXT2_FS=y)
     - tmpfs (CONFIG_TMPFS=y)
     - ramdisk (CONFIG_BLK_DEV_RAM=y)
     - initrd (CONFIG_BLK_DEV_INITRD=y)

     You can use untouched Vanila Linux kernel 2.6 from Slackware!

   * all the following things must be compiled in the kernel or as 
     a kernel modules (.ko):
     - loop
     - isofs (if you will boot your live distro from CDROM)
     - ehci-hcd, ohci-hcd, uhci-hcd, usb-storage (if you will boot your live distro from USB)

   * all these modules must be available:
     - unionfs.ko (http://www.filesystems.org/project-unionfs.html)
     - squashfs.ko (http://squashfs.sourceforge.net)

     Linux Live scripts already contain precompiled unionfs.ko and squashfs.ko 
     kernel modules in ./initrd/kernel-modules directory, and important
     'mksquashfs` command is in ./tools. So in general, you don't need to
     do anything here, unless you wish to use some unsupported kernel,
     or you wish to use newer version of squashfs or unionfs.

   * You must modify your distro to not test the status of root directory
     (whether it is (is not) writable). For example, Slackware is testing 
     the status of the root partition during boot and if it's read-write,
     it will display a message and will wait for user input. This is something 
     we don't like, right? Unionfs can't be remounted ro, so I can't avoid 
     this in linux live scripts. I have to patch Slackware rc scripts (rc.S)
     to skip the test. You will need to do something similar for your distro.

   * Your distro must have /usr/bin/chroot or /usr/sbin/chroot

  These requirements could change with new kernel or unionfs versions.
